{"version":3,"sources":["store/cake/cakeReducer.js","store/cake/cakeTypes.js","store/candy/candyReducer.js","store/candy/candyTypes.js","store/users/userReducer.js","store/users/userTypes.js","store/rootReducer.js","store/index.js","components/partials/Header.js","components/CakeContainer.js","store/cake/cakeActions.js","components/HooksCakeContainer.js","components/CombinedReduerContainer.js","store/candy/candyActions.js","components/AsyncConatiner.js","store/users/userActions.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["initialState","numOfCakes","cakeReducer","state","action","type","numOfCandy","candyReducer","loading","data","error","userReducer","payload","rootReducer","combineReducers","cake","candy","user","store","createStore","applyMiddleware","logger","thunkMiddleware","Header","Nav","variant","className","defaultActiveKey","Item","Link","eventKey","as","to","connect","dispatch","buyCake","addCake","props","Button","onClick","HooksCakeContainer","useSelector","useDispatch","CombinedReduerContainer","AsyncConatiner","users","useEffect","axios","get","then","response","catch","err","fetchUserError","message","Spinner","animation","role","Alert","Card","ListGroup","map","index","key","name","Router","exact","path","component","CakeContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.e77e5efe.chunk.js","sourcesContent":["import { BUY_CAKE, ADD_CAKE } from './cakeTypes';\r\n\r\nconst initialState = {\r\n    numOfCakes: 10\r\n}\r\n\r\nconst cakeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case BUY_CAKE:\r\n            return { ...state, numOfCakes: state.numOfCakes - 1 }\r\n        case ADD_CAKE:\r\n            return { ...state, numOfCakes: state.numOfCakes + 1 }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cakeReducer","export const BUY_CAKE = 'BUY_CAKE';\r\nexport const ADD_CAKE = 'ADD_CAKE';","import { BUY_CANDY, ADD_CANDY } from './candyTypes';\r\n\r\nconst initialState = {\r\n    numOfCandy: 20\r\n}\r\n\r\nconst candyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case BUY_CANDY:\r\n            return { ...state, numOfCandy: state.numOfCandy - 1 }\r\n        case ADD_CANDY:\r\n            return { ...state, numOfCandy: state.numOfCandy + 1 }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default candyReducer","export const BUY_CANDY = 'BUY_CANDY';\r\nexport const ADD_CANDY = 'ADD_CANDY';","import { FETCH_USER, FETCH_USER_SUCCESS, FETCH_USER_ERROR } from './userTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                data: action.payload,\r\n                error: null\r\n            }\r\n        case FETCH_USER_ERROR:\r\n            return {\r\n                loading: false,\r\n                data: [],\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userReducer","export const FETCH_USER = 'FETCH_USER';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';","import { combineReducers } from 'redux';\r\nimport cakeReducer from './cake/cakeReducer';\r\nimport candyReducer from './candy/candyReducer';\r\nimport userReducer from './users/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    cake: cakeReducer,\r\n    candy: candyReducer,\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n// import cakeReducer from './cake/cakeReducer';\r\nimport rootReducer from './rootReducer';\r\nimport logger from 'redux-logger';\r\n\r\n// const store = createStore(cakeReducer)\r\nconst store = createStore(rootReducer, applyMiddleware(logger, thunkMiddleware));\r\nexport default store","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <Nav variant=\"pills\" className=\"justify-content-center\" defaultActiveKey=\"link-1\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" as={Link} to=\"/\">Without Hooks</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item >\r\n                    <Nav.Link eventKey=\"link-2\" as={Link} to=\"/with-hooks\">With Hooks</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-3\" as={Link} to=\"/combined-reducer\">Combined Reducer</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-4\" as={Link} to=\"/async-function\">Async Function</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { buyCake, addCake } from '../store/cake/cakeActions'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction CakeContainer(props) {\r\n    return (\r\n        <div>\r\n            <h1> Without Hooks </h1>\r\n            Navigate to components/CakeContainer.js\r\n            <h2>Number of cakes: {props.numOfCakes}</h2>\r\n            <Button onClick={props.buyCake} variant=\"outline-primary\">Buy Cake</Button>{' '}\r\n            <Button onClick={props.addCake} variant=\"secondary\">Add Cake</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numOfCakes: state.cake.numOfCakes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        buyCake: () => dispatch(buyCake()),\r\n        addCake: () => dispatch(addCake())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer);","import { BUY_CAKE, ADD_CAKE } from './cakeTypes';\r\n\r\nexport const buyCake = () => {\r\n    return {\r\n        type: BUY_CAKE\r\n    }\r\n}\r\n\r\nexport const addCake = () => {\r\n    return {\r\n        type: ADD_CAKE\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { buyCake, addCake } from '../store/cake/cakeActions';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction HooksCakeContainer() {\r\n\r\n    const numOfCakes = useSelector(state => state.cake.numOfCakes)\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div>\r\n            <h1> With Hooks </h1>\r\n            Navigate to components/HooksCakeContainer.js\r\n            <h2>Number of cakes: {numOfCakes}</h2>\r\n            <Button onClick={() => dispatch(buyCake())} variant=\"outline-primary\">Buy Cake</Button>{' '}\r\n            <Button onClick={() => dispatch(addCake())} variant=\"secondary\">Add Cake</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HooksCakeContainer;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { buyCake, addCake } from '../store/cake/cakeActions';\r\nimport { buyCandy, addCandy } from '../store/candy/candyActions';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction CombinedReduerContainer() {\r\n    const numOfCakes = useSelector(state => state.cake.numOfCakes)\r\n    const numOfCandy = useSelector(state => state.candy.numOfCandy)\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div>\r\n            <h1> Combined Reducer with Hooks </h1>\r\n            Navigate to components/CombinedReduerContainer.js\r\n            <h2>Number of cakes: {numOfCakes}</h2>\r\n            <Button onClick={() => dispatch(buyCake())} variant=\"outline-primary\">Buy Cake</Button>{' '}\r\n            <Button onClick={() => dispatch(addCake())} variant=\"secondary\">Add Cake</Button>\r\n            <br />\r\n            <h2>Number of Candy: {numOfCandy}</h2>\r\n            <Button onClick={() => dispatch(buyCandy())} variant=\"outline-primary\">Buy Candy</Button>{' '}\r\n            <Button onClick={() => dispatch(addCandy())} variant=\"secondary\">Add Candy</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CombinedReduerContainer;","import { BUY_CANDY, ADD_CANDY } from './candyTypes';\r\n\r\nexport const buyCandy = () => {\r\n    return {\r\n        type: BUY_CANDY\r\n    }\r\n}\r\n\r\nexport const addCandy = () => {\r\n    return {\r\n        type: ADD_CANDY\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchUser } from '../store/users/userActions';\r\nimport { Card, ListGroup, Spinner, Alert } from 'react-bootstrap';\r\n\r\nfunction AsyncConatiner() {\r\n    const users = useSelector(state => state.user);\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchUser());\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1> Async Function </h1>\r\n            Navigate to components/AsyncConatiner.js\r\n            <br />\r\n            {\r\n                users.loading ?\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner> :\r\n                    users.error ?\r\n                        <Alert variant=\"danger\">\r\n                            {users.error}\r\n                        </Alert>\r\n                        : <Card>\r\n                            <ListGroup variant=\"flush\">\r\n                                {users.data.map((user, index) => (\r\n                                    <ListGroup.Item key={index}>{user.name}</ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        </Card>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AsyncConatiner;","import { FETCH_USER, FETCH_USER_SUCCESS, FETCH_USER_ERROR } from './userTypes';\r\nimport axios from 'axios';\r\n\r\nconst fetchUserRequest = () => {\r\n    return {\r\n        type: FETCH_USER,\r\n    }\r\n}\r\n\r\nconst fetchUserSuccess = (users) => {\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\n\r\nconst fetchUserError = (err) => {\r\n    return {\r\n        type: FETCH_USER_ERROR,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n    return function (dispatch) {\r\n        dispatch(fetchUserRequest())\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then((response) => {\r\n                const { data } = response;\r\n                dispatch(fetchUserSuccess(data))\r\n            }).catch((err) => {\r\n                dispatch(fetchUserError(err.message))\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport CakeContainer from './components/CakeContainer';\r\nimport HooksCakeContainer from './components/HooksCakeContainer';\r\nimport CombinedReduerContainer from './components/CombinedReduerContainer';\r\nimport AsyncConatiner from './components/AsyncConatiner';\r\n\r\nconst Router = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={CakeContainer} />\r\n        <Route exact path=\"/with-hooks\" component={HooksCakeContainer} />\r\n        <Route exact path=\"/combined-reducer\" component={CombinedReduerContainer} />\r\n        <Route exact path=\"/async-function\" component={AsyncConatiner} />\r\n    </Switch>\r\n)\r\n\r\nexport default Router","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nimport Header from './components/partials/Header';\nimport Router from './Router';\n//CSS Imports\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Header />\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Router />\n        </div>\n      </div>\n    </Provider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}